efi_two_partition()
{
    printf "\n\n Zapping the disk!\n\n"
    
    sgdisk -z $2
    
    printf "\n\nCreating EFI\n\n"
    sgdisk -g -n 1:0:+150M "$choice_one" -t 1:ef00
    last=$(sgdisk -E $2)
    next=$(sgdisk -F $2)
    
    printf "\n\nCreating Root\n\n"
    sgdisk -n 2:"$next":"$last" "$choice_one" -t 2:$1
    printf "\n\nPartitioning done\n\n"
}

gpt_single()
{
    printf "\n\n Zapping the disk!\n\n"
    sgdisk -z $2
    printf "\nMaking the part!\n"
    sgdisk -n 1:"$next":"$last" "$choice_one" -t 1:$3
}

format_mount_efi()
{
    printf "\n\nFormating and mounting..\n"
    diski="$choice_one"$s2
    if [ $1 == 'crypt' ]
    then
        diski=/dev/mapper/"$rootnodename"
    fi
    mkfs.ext4 "$diski"
    mkfs.fat -F 16 "$choice_one"$s1
    mount $diski /mnt
    mkdir -p /mnt/boot/efi
    mount "$choice_one"$s1 /mnt/boot/efi
}
encrypted_efi()
{
    grab_disk
    
    efi_two_partition 8309
    
    printf "Now to setup encryption..\n\n"
    
    printf "\n\nSetting password and Formating disk..\n"
    passfun_create()
    {
        cryptsetup luksFormat --type luks1 "$choice_one"$s2
        res=$?
    }
    passfun_create
    while [ ! $res == 0 ]
    do
        
        printf "\n\nError retry?(y/n): "
        read -r ang
        if [ ! $ang == 'y' ]
        then
            $res=0
        else
            passfun_create
        fi
    done
    
    printf "\n\nEnter node name for partition: "
    read -r rootnodename
    printf "\n\nopening...s-sorry gonna need that pass again..\n"
    
    passfun_open()
    {
        cryptsetup open "$choice_one"$s2 "$rootnodename"
        res=$?
    }
    passfun_open
    while [ ! $res == 0 ]
    do
        printf "\n\nError retry?(y/n): "
        read -r ang
        if [ ! $ang == 'y' ]
        then
            res=0
        else
            passfun_open
        fi
    done
    
    format_mount_efi crypt
    
    printf "\n\nEnter keyfile name(this is to avoid entering password twice): "
    read -r keyname
    dd bs=512 count=4 if=/dev/random of=/mnt/"$keyname" iflag=fullblock
    chmod 
    printf "\n\nI know I know a lot, but gonna need that pass again..\n"
    
    passfun_add()
    {
        cryptsetup -v luksAddKey "$choice_one"$s2 /mnt/"$keyname"
        res=$?
    }
    passfun_add
    while [ ! $res == 0 ]
    do
        printf "\n\nError retry?(y/n): "
        read -r ang
        if [ ! $ang == 'y' ]
        then
            res=0
        else
            passfun_add
        fi
    done
    
    printf "\n\nSaving pertinent information..\n"
    arootuuid=($(blkid -o value "$choice_one"$s2 | cut -d" " -f 1))
    rootuuid=${arootuuid[0]}
    touch /mnt/encrypted
    echo "$rootuuid" > ss
    echo "$keyname" > fbi
    echo "$rootnodename" > zog
}
unencrypted_efi()
{
    efi_two_partition 8300
}

printf "/n/nEncrypted efi(e), plain efi(p):"
read $sel
case $sel in
    g1|gpt-1part)
        if [ $2 == 'help' ]
        then
            printf "$(basename $0) g1 /dev/disk type(e.g 8300) (optional:mkfs)\n"
        gpt_single
        if [ $4 ]
        then
            $4 $2
        fi
    ;;
    p|plain)
        efi_two_partition $1 $2 $3
    ;;
esac
